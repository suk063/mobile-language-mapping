import argparse, pandas as pd, matplotlib.pyplot as plt

# python analyze_metrics.py trajectory_metrics.csv


p = argparse.ArgumentParser()
p.add_argument("csv", default="trajectory_metrics.csv",
                help="CSV generated by observe_traj.py (default: %(default)s)")
args = p.parse_args()

df = pd.read_csv(args.csv)

# ------------------------------------------------------------------ #
#  1. Print top‑ranking “mapping‑worthy” demos                       #
# ------------------------------------------------------------------ #
rank = (
    df[df["overall_success"] == True]
    .assign(score = lambda d:
        (1 - d["vis_frac_head"])               # prefer out‑of‑view
        + (1 - d["vis_frac_hand"])
        + 0.5 * d["longest_invis_gap_head"] / d["traj_length"]
        + 0.5 * d["longest_invis_gap_hand"]  / d["traj_length"])
    .sort_values("score", ascending=False)
)

print("\n=== Top 10 trajectories where mapping should help most ===")
cols = ["traj_id", "vis_frac_head", "vis_frac_hand",
        "longest_invis_gap_head", "longest_invis_gap_hand",
        "min_head_goal_dist", "min_hand_goal_dist"]
print(rank.head(10)[cols].to_string(index=False))

# ------------------------------------------------------------------ #
#  2. Plots                                                          #
# ------------------------------------------------------------------ #
plt.figure(figsize=(5,4))
plt.hist(df["vis_frac_head"], bins=20)
plt.xlabel("Head‑cam visibility fraction"); plt.ylabel("Count");
plt.title("Goal in FOV (head camera)")
plt.tight_layout()
plt.show()

plt.figure(figsize=(5,4))
plt.scatter(df["vis_frac_head"], df["min_head_goal_dist"])
plt.xlabel("Head‑cam visibility fraction")
plt.ylabel("Minimum head‑cam distance to goal (m)")
plt.title("Close approaches when goal is rarely visible")
plt.tight_layout()
plt.show()

top10 = rank.head(10)
plt.figure(figsize=(6,4))
plt.bar(top10["traj_id"], top10["longest_invis_gap_head"])
plt.xticks(rotation=45, ha="right")
plt.ylabel("Longest invisible gap (frames)")
plt.title("Head‑cam longest invisibility (top‑10 demos)")
plt.tight_layout()
plt.show()

